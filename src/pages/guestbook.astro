---
export const prerender = false;
import { db, GuestBook, desc, sql } from "astro:db";
import BaseLayout from "../layouts/BaseLayout.astro";
import GuestbookEntry from "../components/Guestbook/GuestbookEntry.astro";
import AlertMessage from "../components/Guestbook/AlertMessage.astro";
import Pagination from "../components/Guestbook/Pagination.astro";
import GuestbookForm from "../components/Guestbook/GuestbookForm.astro";

const PER_PAGE = 5;

// Handle form submission
if (Astro.request.method === "POST") {
  const contentType = Astro.request.headers.get("content-type");
  if (!contentType || !contentType.includes("multipart/form-data")) {
    return new Response("Invalid content type", { status: 400 });
  }

  const formData = await Astro.request.formData();
  const author = (formData.get("author") as string)?.trim();
  const link = (formData.get("link") as string)?.trim();
  const content = (formData.get("content") as string)?.trim();

  const isValidUrl = (url: string): boolean => {
    try {
      new URL(url);
      return true;
    } catch {
      return false;
    }
  };

  if (!author || !content || content.length > 140) {
    return Astro.redirect("/guestbook?error=invalid_input");
  }
  if (link && !isValidUrl(link)) {
    return Astro.redirect("/guestbook?error=invalid_link");
  }
  if ((content.match(/https?:\/\//g) || []).length > 1) {
    return Astro.redirect("/guestbook?error=too_many_links");
  }

  await db.insert(GuestBook).values({
    author,
    link,
    content,
    timestamp: new Date(),
  });
  return Astro.redirect("/guestbook?success=message_added");
}

// Fetch guestbook entries
const page = parseInt(Astro.url.searchParams.get("page") || "1");
const offset = (page - 1) * PER_PAGE;

const totalEntriesResult = await db
  .select({ count: sql`count(*)` })
  .from(GuestBook);
const totalEntries = totalEntriesResult[0].count as number;

const guestBook = await db
  .select()
  .from(GuestBook)
  .orderBy(desc(GuestBook.timestamp))
  .limit(PER_PAGE)
  .offset(offset);

// Get alert message if any
const success = Astro.url.searchParams.get("success");
const error = Astro.url.searchParams.get("error");
---

<BaseLayout
  title="Guestbook"
  image="https://www.davidumoru.me/static/meta/guestbook-meta.webp"
>
  <main>
    <h1>Guestbook</h1>

    <div class="alert-container">
      {
        success && (
          <AlertMessage type="success" message="Message added successfully!" />
        )
      }
      {
        error === "invalid_input" && (
          <AlertMessage
            type="error"
            message="Invalid input. Ensure author and message are filled."
          />
        )
      }
      {
        error === "invalid_link" && (
          <AlertMessage type="error" message="Invalid URL format." />
        )
      }
      {
        error === "too_many_links" && (
          <AlertMessage type="error" message="Too many links in message." />
        )
      }
    </div>

    <section class="guestbook-entries">
      {guestBook.map((entry) => <GuestbookEntry {...entry} />)}
    </section>

    <Pagination
      currentPage={page}
      hasNextPage={offset + guestBook.length < totalEntries}
      hasPrevPage={page > 1}
    />

    <GuestbookForm />
  </main>
</BaseLayout>

<style>
  .alert-container {
    margin-bottom: 24px;
  }

  .guestbook-entries {
    margin-bottom: 48px;
  }
</style>

---
import { getCollection } from "astro:content";
import PostCard from "../../components/PostItem.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import CenteredLayout from "../../layouts/CenteredLayout.astro";
import PageHeader from "../../components/PageHeader.astro";

const posts = await getCollection("posts");

const essays = posts
  .filter((post) => post.data.essay === true)
  .sort(
    (a, b) =>
      new Date(b.data.datePublished).getTime() -
      new Date(a.data.datePublished).getTime()
  );

const notes = posts
  .filter((post) => post.data.essay === false)
  .sort(
    (a, b) =>
      new Date(b.data.datePublished).getTime() -
      new Date(a.data.datePublished).getTime()
  );
---

<BaseLayout
  title="Posts"
  description="Essays, notes, and writings on development, design, tools, and personal reflection."
>
  <CenteredLayout>
    <section id="essays" class="flow">
      <PageHeader
        title="Essays"
        description="Opinionated, longform narrative writing"
      />
      <div>
        {
          essays.map((post) => (
            <PostCard
              url={`posts/${post.id}`}
              title={post.data.title}
              description={post.data.description}
              datePublished={post.data.datePublished}
              features={post.data.features}
            />
          ))
        }
      </div>
    </section>

    <hr>

    <section id="notes" class="flow">
      <PageHeader
        title="Notes"
        description="Loose, unopinionated notes on things I don't entirely understand yet. "
      />
      <div>
        {
          notes.map((post) => (
            <PostCard
              url={`posts/${post.id}`}
              title={post.data.title}
              description={post.data.description}
              datePublished={post.data.datePublished}
              features={post.data.features}
            />
          ))
        }
      </div>
    </section>
  </CenteredLayout>
</BaseLayout>
